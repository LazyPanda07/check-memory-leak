name: "Check Memory Leaks"
description: "Detect memory leaks in C/C++ programs. Linux only"
author: "LazyPanda07"
branding:
  icon: "alert-octagon"
  color: "red"


inputs:
  path:
    description: "Path directory with executable file"
    required: true

  name:
    description: "Executable file name"  
    required: true

  pre-execute:
    description: "Some bash commands or scripts from 'path' directory"
    required: false
    default: ""

  args:
    description: "Executable arguments"
    required: false
    default: ""

  max-threads:
    description: "By default, Valgrind can handle to up to 1000 threads. Occasionally, that number is too small. Use this option to provide a different limit. E.g. max-threads: 3000."
    required: false
    default: 1000

  leak-kinds:
    description: "List of leak kinds, separated by comma. Example: definite,possible. All available variants: definite, indirect, possible, reachable, all"
    required: false
    default: all

runs:
  using: "composite"

  steps:
  - name: Checks is running on Linux
    if: ${{ runner.OS != 'Linux' }}
    shell: bash
    run: |
        echo "Only supports Linux"
        exit 1

  - name: Install Valgrind
    shell: bash
    run: sudo apt install -y valgrind

  - name: Start Valgrind test
    shell: bash
    run: |
        cd ${{ inputs.path }}
        ${{ inputs.pre-execute }}
        valgrind --max-threads=${{ inputs.max-threads }} --leak-check=full --show-leak-kinds=${{ inputs.leak-kinds }} --track-origins=yes --log-file=memory_leaks_result.txt ./${{ inputs.name }} ${{ inputs.args }}

  - name: Result
    shell: bash
    run: |
        cd ${{ inputs.path }}
        export VALGRIND_RESULT_FREED=$(grep -Rnw 'memory_leaks_result.txt' -e 'All heap blocks were freed -- no leaks are possible')
        export VALGRIND_RESULT_DEFINITELY_LOST=$(grep -Rnw 'memory_leaks_result.txt' -e 'definitely lost: 0 bytes')
        export VALGRIND_RESULT_INDIRECTLY_LOST=$(grep -Rnw 'memory_leaks_result.txt' -e 'indirectly lost: 0 bytes')
        
        touch check_memory_leaks.sh

        echo $'#!/bin/bash\n' >> check_memory_leaks.sh
        echo $'cat memory_leaks_result.txt\n' >> check_memory_leaks.sh

        echo $'if [[ -n "${VALGRIND_RESULT_DEFINITELY_LOST}" ]];' >> check_memory_leaks.sh
        echo $'then' >> check_memory_leaks.sh
        echo $'    exit 0' >> check_memory_leaks.sh
        echo $'fi\n' >> check_memory_leaks.sh

        echo $'if [[ -n "${VALGRIND_RESULT_INDIRECTLY_LOST}" ]];' >> check_memory_leaks.sh
        echo $'then' >> check_memory_leaks.sh
        echo $'    exit 0' >> check_memory_leaks.sh
        echo $'fi\n' >> check_memory_leaks.sh

        echo $'if [[ -z "${VALGRIND_RESULT_FREED}" ]];' >> check_memory_leaks.sh
        echo $'then' >> check_memory_leaks.sh
        echo $'    exit 2\nfi' >> check_memory_leaks.sh

        chmod +x check_memory_leaks.sh
        ./check_memory_leaks.sh
